<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************
* @Copyright : nuritelecom
* @ProjectName : kepco-model
* @FileName : MeterValueMapper.xml
* @Author : kh.yoon
* @Date : 2020-02-03
************************************-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.MeterValueDAO">

	<sql id="base_where_list">
		<where>
		<if test="meter_id != null and meter_id != ''" >     
            AND mv.meter_id = #{meter_id}
        </if>
        <if test="read_dt != null and read_dt != ''" >     
            AND mv.read_dt = #{read_dt}
        </if>
        <if test="channel != null and channel != ''" >     
            AND mv.channel = #{channel}
        </if> 
        <if test="sdate != null and edate != null and sdate != '' and edate != '' " >     
            AND mv.read_dt between #{sdate} AND #{edate}
        </if>    
		<if test="searchfield != null and searchquery != null " >
			AND ${searchfield} like concat(#{searchquery},'%')
		</if>
		<if test="device_id != null and device_id != ''" >     
            AND mi.device_id = #{device_id}
        </if>
        <if test="meter_type != null and meter_type != ''" >     
            AND mi.meter_type = #{meter_type}
        </if>		
        
        </where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="meterValue">	
		SELECT COUNT(*) co
		FROM EMI_METER_VALUE a		
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="meterValue" parameterType="meterValue">	
		SELECT 
			meter_id
			, read_dt
			, channel
			, meter_value
			, sect_meter_value
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
		FROM EMI_METER_VALUE a	
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="selectOne" resultType="meterValue" parameterType="meterValue">	
		SELECT 
			meter_id
			, read_dt
			, channel
			, meter_value
			, sect_meter_value
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
		FROM EMI_METER_VALUE a				
		WHERE object_id = #{object_id}
	</select>
	
	<!-- 검침 메뉴 메인 그리드  -->
	<select id="getMeterValue" resultType="MeterValue" parameterType="MeterValue">
		SELECT 
			a.meter_id,
			a.meter_serial,
			DATE_FORMAT(CONCAT(a.read_dt,'00'), '${prop.small.dt}') AS read_dt,
			d.code_nm, meter_type, 
			a.meter_value,
			DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
		FROM (
			SELECT mv.meter_id, mv.read_dt, mv.channel, mv.meter_value, mv.sect_meter_value, mv.reg_dt, mi.meter_type, mi.device_id, mi.meter_serial
			FROM EMI_METER_INFO AS mi
			LEFT JOIN EMI_METER_VALUE AS mv
			ON mi.meter_id = mv.meter_id
			<include refid="base_where_list" />
			AND mv.channel = 'CH001'
		) AS a
		JOIN EMI_ALL_CODE AS d
		ON a.meter_type= d.code
		<include refid="order_by_list" />
		<include refid="query_limit" />
		
	</select>
	
	<!-- 검침 메뉴 메인 그리드 개수  -->
	<select id="getMeterValueCount" resultType="java.lang.Integer" parameterType="MeterValue">
		SELECT COUNT(*) 
		FROM (
			SELECT mv.meter_id, mv.read_dt, mv.channel, mv.meter_value, mv.reg_dt, mi.meter_type
			FROM EMI_METER_INFO AS mi
			LEFT JOIN EMI_METER_VALUE AS mv
			ON mi.meter_id = mv.meter_id
			<include refid="base_where_list" />
			AND mv.channel = 'CH001'
		) AS a;
	</select>
	
	
	<!-- 검침메뉴 상세창의 미터 정보-->
	<select id="selectMeterInfo" resultType="java.util.Map" parameterType="MeterValue">
		SELECT 
			a.meter_id,
			a.device_id,
			d.code_nm meter_type, 
			DATE_FORMAT(a.last_comm_dt,'${prop.dt}') AS last_comm_dt
		FROM (
			SELECT  
				mi.meter_id,
				mi.device_id,
				mi.meter_type, 
				ds.last_comm_dt
				
			FROM emi_METER_INFO AS mi
			LEFT JOIN emi_device_status AS ds
			ON mi.device_id = ds.device_id
			WHERE mi.meter_id = #{meter_id}
		) AS a
		JOIN emi_ALL_CODE AS d
		ON a.meter_type = d.code;
	</select>
	
	<!-- 특정 미터의 가용 채널 리스트-->
	<select id="selectMeterChannel" resultType="java.util.Map" parameterType="MeterValue">	
		SELECT a.channel channel_code,
			d.code_NM channel_name,
			a.channel_idx channel_idx,
			a.meter_type
		FROM (
		
			SELECT DISTINCT c.CHANNEL , c.channel_idx, mi.meter_type
			FROM EMI_METER_INFO AS mi
			LEFT JOIN EMI_CHANNEL_CONFIG AS c
			ON mi.meter_type = c.meter_type
			WHERE mi.meter_id = #{meter_id}
		
		) AS a
		JOIN EMI_ALL_CODE AS d
		ON a.CHANNEL= d.code;

	</select>
	
	<!-- 검침메뉴 상세창의 그리드+차트 -->
	<select id="getMeterValueDetail" resultType="java.util.Map" parameterType="MeterValue">
		SELECT
		    meter_id
		    , DATE_FORMAT(CONCAT(T.read_dt,'00'), '${prop.small.dt}') AS read_dt 
		    ,T.read_dt AS read_dt_int
		    
		<foreach item="item" collection="channelList" >
			, SUM(CASE WHEN T.channel = '${item.channel_code}' THEN meter_value END) AS c${item.channel_idx}_metervalue
		</foreach>
		
		FROM (  
			SELECT 
				a.meter_id,
				a.read_dt,
				a.CHANNEL,
				d.code_nm using_channel,
				a.meter_value,
				a.reg_dt
				
			FROM EMI_METER_VALUE a
			JOIN EMI_ALL_CODE AS d
			ON a.channel = d.code
			WHERE a.channel IN ( 
		
				SELECT c.CHANNEL
				FROM EMI_METER_INFO AS mi
				LEFT JOIN EMI_CHANNEL_CONFIG AS c
				ON mi.meter_type = c.meter_type
				<where>
					<if test="meter_id != null and meter_id != ''" >     
			            AND mi.meter_id = #{meter_id}
			        </if>
		        </where>
			)
			<if test="meter_id != null and meter_id != ''" >     
			    AND a.meter_id = #{meter_id}
			</if>
			<if test="sdate != null and edate != null and sdate != '' and edate != '' " >     
            	AND a.read_dt between #{sdate} AND #{edate}
        	</if>  
			<include refid="order_by_list" />	
		) T
		GROUP BY meter_id , read_dt
	</select>
	
	<insert id="insert" parameterType="meterValue">
	 	
		INSERT INTO EMI_METER_VALUE (
			meter_id
			, read_dt
			, channel
			, meter_value
			, sect_meter_value
		) VALUES (
			  #{meter_id}
			, #{read_dt}
			, #{channel}
			, #{meter_value}
			, #{sect_meter_value}
		)
    </insert>
    
    <insert id="insertAll" parameterType="java.util.List">
		INSERT INTO EMI_METER_VALUE (
			meter_id
			, read_dt
			, channel
			, meter_value
			, sect_meter_value
			, reg_dt	
		) VALUES	
		<foreach collection="list" item="list" index="index" open="(" separator="),("  close=")">
			#{list.meter_id}
			, #{list.read_dt}
			, #{list.channel}
			, #{list.meter_value}
			, #{list.sect_meter_value}			
			, now()
		</foreach>
		ON DUPLICATE KEY UPDATE meter_value=VALUES(meter_value);
	</insert>
    
    <update id="update" parameterType="meterValue">
		UPDATE EMI_METER_VALUE SET			
			meter_value = #{meter_value}
			, sect_meter_value = #{sect_meter_value}
		WHERE meter_id = #{meter_id} 
	      AND read_dt = #{read_dt} 
	      AND channel = #{channel}
	</update>
	
</mapper>