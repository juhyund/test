<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************
* @Copyright : nuritelecom
* @ProjectName : kepco-model
* @FileName : DeviceDevicePowerLogMapper.xml
* @Author : guyrune
* @Date : 2020-04-22
************************************-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.DevicePowerLogDAO">

	<sql id="base_where_list">
		<where>
		<if test="branch_parent_id != null and branch_parent_id != ''" >     
            AND c.branch_parent_id = #{branch_parent_id}
        </if>
        <if test="branch_id != null and branch_id != ''" >     
            AND b.branch_id = #{branch_id}
        </if>
        <if test="power_status != null and power_status != ''" >     
            AND a.power_status = #{power_status}
        </if>
        <if test="searchfield != null and searchquery != null  and searchfield != '' and searchquery != ''" >
			AND b.${searchfield} like concat(#{searchquery},'%')
		</if>
		<if test="sdate != null and edate != null and sdate != '' and edate != ''">
			AND a.reg_dt between date_format(concat(#{sdate},'000000'), '%Y-%m-%d %H:%i:%s') AND date_format(concat(#{edate},'235959'), '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="s_on_date != null and e_on_date != null and s_on_date != '' and e_on_date != ''">
			AND a.power_on_time between concat(#{s_on_date},'000000') AND concat(#{e_on_date},'235959')
		</if>
		<if test="s_off_date != null and e_off_date != null and s_off_date != '' and e_off_date != ''">
			AND a.power_off_time between concat(#{s_off_date},'000000') AND concat(#{e_off_date},'235959')
		</if>
		</where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="devicePowerLog">	
		SELECT COUNT(*) co
		FROM emi_device_power_log a	
		LEFT OUTER JOIN emi_device_info b ON a.device_id = b.device_id 
		LEFT OUTER JOIN emi_branch_info c ON b.branch_id = c.branch_id
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="devicePowerLog" parameterType="devicePowerLog">	
		SELECT 
			a.power_log_seq
			, (SELECT branch_nm FROM emi_branch_info WHERE branch_id = c.branch_parent_id) AS parent_branch_nm
			, c.branch_nm
			, b.device_serial
			, DATE_FORMAT(a.power_on_time,'${prop.dt}') as power_on_time
			, DATE_FORMAT(a.power_off_time,'${prop.dt}') as power_off_time
			, CASE a.power_status WHEN 1 THEN '복전' WHEN 0 THEN '정전' ELSE '-' END AS power_status
			, a.itime
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt			
		FROM emi_device_power_log a
		LEFT OUTER JOIN emi_device_info b ON a.device_id = b.device_id 
		LEFT OUTER JOIN emi_branch_info c ON b.branch_id = c.branch_id
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="selectOne" resultType="devicePowerLog" parameterType="devicePowerLog">
		SELECT 
			a.power_log_seq
			, (SELECT branch_nm FROM emi_branch_info WHERE branch_id = c.branch_parent_id) AS parent_branch_nm
			, c.branch_nm
			, b.device_serial
			, DATE_FORMAT(a.power_on_time,'${prop.dt}') as power_on_time
			, DATE_FORMAT(a.power_off_time,'${prop.dt}') as power_off_time	
			, CASE a.power_status WHEN 1 THEN '복전' WHEN 0 THEN '정전' ELSE '-' END AS power_status
			, a.itime
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt			
		FROM emi_device_power_log a
		LEFT OUTER JOIN emi_device_info b ON a.device_id = b.device_id 
		LEFT OUTER JOIN emi_branch_info c ON b.branch_id = c.branch_id	
		WHERE a.device_id = #{device_id}
	</select>
	
	<insert id="insert" parameterType="devicePowerLog">
		INSERT INTO EMI_DEVICE_INFO (
			  power_log_seq
			, device_id
			, power_on_time
			, power_off_time
			, power_status
			, itime
			, reg_dt
		) VALUES (
			  #{power_log_seq}
			, #{device_id}
			, #{power_on_time}
			, #{power_off_time}
			, #{power_status}
			, #{itime}
			, #{reg_id}
			, now()			
		)
    </insert>
    
    <update id="update" parameterType="devicePowerLog">
		UPDATE EMI_DEVICE_INFO SET
			<if test="device_id != null" > , device_id = #{device_id}</if>
			<if test="power_on_time != null" > , power_on_time = #{power_on_time}</if>
			<if test="power_off_time != null" > , power_off_time = #{power_off_time}</if>
			<if test="power_status != null" > , power_status = #{power_status}</if>
			<if test="itime != null" > , itime = #{itime}</if>
			<if test="mobile_no != null" > , mobile_no = #{mobile_no}</if>	
		WHERE power_log_seq = #{power_log_seq}
	</update>
	
</mapper>
