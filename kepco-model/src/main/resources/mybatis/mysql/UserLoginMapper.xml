<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.UserLoginDAO">

	<sql id="base_where_list">
		<where>
		<if test="user_seq != null" >     
            AND a.user_seq = #{user_seq}
        </if>
        <if test="user_id != null" >     
            AND a.user_id = #{user_id}
        </if>
        <if test="login_yn != null" >     
            AND a.login_yn = #{login_yn}
        </if>
        <if test="login_ip != null" >     
            AND a.login_ip = INET_ATON(#{login_ip})
        </if>
        <if test="login_text != null" >     
            AND a.login_text = #{login_text}
        </if>
        <if test="login_page != null" >     
            AND a.login_page = #{login_page}
        </if>
        <if test="login_pre_page != null" >     
            AND a.login_pre_page = #{login_pre_page}
        </if>
		<if test="searchfield != null and searchquery != null " >
			AND ${searchfield} like concat(#{searchquery},'%')
		</if>
		<if test="sdate != null and edate != null">
			AND a.login_dt between date_format(concat(#{sdate},'000000'), '%Y-%m-%d %H:%i:%s') AND date_format(concat(#{edate},'235959'), '%Y-%m-%d %H:%i:%s')
		</if>
		</where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="userLogin">	
		SELECT COUNT(*) co
		FROM EMI_USER_LOGIN a		
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="userLogin" parameterType="userLogin">	
		SELECT
			user_seq
			, DATE_FORMAT(a.login_dt,'${prop.dt}') AS login_dt
			, user_id
			, login_yn
			, INET_NTOA(login_ip) AS login_ip
			, login_text
			, login_page
			, login_pre_page
		FROM EMI_USER_LOGIN a	
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="selectOne" resultType="userLogin" parameterType="userLogin">	
		SELECT 
			user_seq
			, DATE_FORMAT(a.login_dt,'${prop.dt}') AS login_dt
			, user_id
			, login_yn
			, INET_NTOA(login_ip) AS login_ip
			, login_text
			, login_page
			, login_pre_page
		FROM EMI_USER_LOGIN a				
		WHERE user_seq = #{user_seq} AND login_dt = #{login_dt}
	</select>
	
	<insert id="add" parameterType="userLogin">     	
		INSERT INTO EMI_USER_LOGIN (
			user_seq
			, login_dt
			, user_id
			, login_yn
			, login_ip
			, login_text
			, login_page
			, login_pre_page
		) VALUES (
			#{user_seq}
			, now()
			, #{user_id}
			, #{login_yn}
			, INET_ATON(#{login_ip})
			, #{login_text}
			, #{login_page}
			, #{login_pre_page}
		)
    </insert>
    
    <update id="update" parameterType="userLogin">
		UPDATE EMI_USER_LOGIN SET
			 user_id = #{user_id}
			, login_yn = #{login_yn}
			, login_ip = INET_ATON(#{login_ip})
			, login_text = #{login_text}
			, login_page = #{login_page}
			, login_pre_page = #{login_pre_page}
		WHERE user_seq = #{user_seq} AND login_dt = #{login_dt}
	</update>
	
</mapper>