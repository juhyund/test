<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************
* @Copyright : nuritelecom
* @ProjectName : kepco-model
* @FileName : OperationLogMapper.xml
* @Author : kh.yoon
* @Date : 2020-02-03
************************************-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.OperationLogDAO">

	<sql id="base_where_list">
		<where>
		<if test="device_id != null and device_id != ''" >     
            AND a.device_id = #{device_id}
        </if>
        <if test="method_type != null and method_type != ''" >     
            AND ol.method = #{method_type}
        </if>
        <if test="result_status != null and result_status != '' and result_status != '-1'" >     
            AND ol.result = #{result_status}
        </if>
        <if test="result_status == '-1'" >
        	AND ol.result is null	
        </if> 
        <if test="tid != null and tid != ''" >     
            AND ol.tid = #{tid}
        </if>
        <if test="target_meter != null and target_meter != ''" >     
            AND ol.tid = #{target_meter}
        </if>        
        <if test="request_sdate != null and request_sdate != '' and request_edate != null and request_edate != '' ">
			<!-- AND ol.request_dt between date_format(concat(#{request_sdate},'000000'), '%Y-%m-%d %H:%i:%s') AND date_format(concat(#{request_edate},'235959'), '%Y-%m-%d %H:%i:%s') -->
			AND ol.request_dt between concat(#{request_sdate},'000000') AND concat(#{request_edate},'235959')
		</if>
		<if test="result_sdate != null and result_sdate != '' and result_edate != null and result_edate != '' ">
			AND ol.result_dt between concat(#{result_sdate},'000000') AND concat(#{result_edate},'235959')
		</if>                
		<if test="searchfield != null and searchquery != null and searchfield != ''" >
			<if test="searchfield == 'device_id' or searchfield == 'device_serial'">
				AND a.${searchfield} like concat(#{searchquery},'%')
			</if>
			<if test="searchfield == 'object_id'">
				AND ol.${searchfield} like concat(#{searchquery},'%')
			</if>
		</if>
		</where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="operationLog">	
		SELECT COUNT(*) co
		FROM EMI_OPERATION_LOG a		
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="operationLog" parameterType="operationLog">	
		SELECT 
			device_id
			, request_dt
			, service_id
			, method
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, format
			, token
			, mid
			, payload
			, target_meter
			, result
			, result_dt
			, reg_id					
		FROM EMI_OPERATION_LOG a	
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>

	<select id="selectOne" resultType="operationLog" parameterType="operationLog">	
		SELECT 
			device_id
			, request_dt
			, service_id
			, method
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, format
			, token
			, mid
			, payload
			, target_meter
			, result
			, result_dt
			, reg_id
		 FROM EMI_OPERATION_LOG a				
		WHERE device_id = #{device_id} 
          AND request_dt = #{request_dt} 
	</select>
	
	<insert id="insert" parameterType="operationLog">     	
		INSERT INTO EMI_OPERATION_LOG (
			device_id
			, request_dt
			, service_id
			, method
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, format
			, token
			, tid
			, mid
			, payload
			, target_meter
			, result
			, result_dt
			, reg_id
		) VALUES (
			  #{device_id}
			, #{request_dt}
			, #{service_id}
			, #{method}
			, #{object_id}
			, #{object_instance_id}
			, #{resource_id}
			, #{resource_instance_id}
			, #{format}
			, #{token}
			, #{tid}
			, #{mid}
			, #{payload}
			, #{target_meter}
			, #{result}
			, #{result_dt}
			, #{reg_id}
		)
    </insert>
    
    <update id="update" parameterType="operationLog">
		UPDATE EMI_OPERATION_LOG SET
			service_id = #{service_id}
			, method = #{method}
			, object_id = #{object_id}
			, object_instance_id = #{object_instance_id}
			, resource_id = #{resource_id}
			, resource_instance_id = #{resource_instance_id}
			, format = #{format}
			, token = #{token}
			, mid = #{mid}
			, payload = #{payload}
			, target_meter = #{target_meter}
			, result = #{result}
			, result_dt = #{result_dt}
			, reg_id = #{reg_id}
		WHERE device_id = #{device_id} and request_dt = #{request_dt}
	</update>
	
	<select id="getOperationLogList" resultType="operationLog" parameterType="operationLog">	
		SELECT 
			ol.device_id
			, a.device_serial			
			, ol.service_id
			, ol.method
			, ol.object_id
			, ol.object_instance_id
			, ol.resource_id
			, ol.resource_instance_id
			, ol.format
			, ol.token
			, ol.mid
			, ol.tid
			, ol.payload
			, ol.target_meter
			, ol.result
			, ol.target_meter
			, ol.request_dt as _request_dt
			, ifnull(date_format(ol.request_dt, '%Y-%m-%d %H:%i:%s'),'') as request_dt
			, ifnull(date_format(ol.result_dt, '%Y-%m-%d %H:%i:%s'),'') as result_dt
			, ol.reg_id
			, om.object_nm
			, rm.resource_nm								
		FROM EMI_DEVICE_INFO a		
		INNER JOIN EMI_OPERATION_LOG OL ON a.DEVICE_ID = OL.DEVICE_ID
		LEFT OUTER JOIN EMI_OBJECT_MODEL OM ON OL.OBJECT_ID = OM.OBJECT_ID
		LEFT OUTER JOIN EMI_RESOURCE_MODEL RM ON OM.OBJECT_ID = RM.OBJECT_ID AND OL.RESOURCE_ID = RM.RESOURCE_ID
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="getOperationLogListCnt" resultType="int" parameterType="operationLog">	
		SELECT 
			COUNT(*) co					
		FROM EMI_DEVICE_INFO a		
		INNER JOIN EMI_OPERATION_LOG OL ON a.DEVICE_ID = OL.DEVICE_ID
		LEFT OUTER JOIN EMI_OBJECT_MODEL OM ON OL.OBJECT_ID = OM.OBJECT_ID
		LEFT OUTER JOIN EMI_RESOURCE_MODEL RM ON OM.OBJECT_ID = RM.OBJECT_ID AND OL.RESOURCE_ID = RM.RESOURCE_ID	
			
		<include refid="base_where_list" />
		
	</select>
	
	<select id="getOperationLogDetail" resultType="operationLog" parameterType="operationLog">	
		SELECT 
			ol.device_id
			, a.device_serial			
			, ol.service_id
			, ol.method
			, ol.object_id
			, ol.object_instance_id
			, ol.resource_id
			, ol.resource_instance_id
			, ol.format
			, ol.token
			, ol.mid
			, ol.tid
			, ol.payload
			, ol.target_meter
			, ol.result
			, ifnull(date_format(ol.request_dt, '%Y-%m-%d %H:%i:%s'),'') as request_dt
			, ifnull(date_format(ol.result_dt, '%Y-%m-%d %H:%i:%s'),'') as result_dt
			, ol.reg_id
			, om.object_nm
			, rm.resource_nm
			, cf.metering_type_nm							
		FROM EMI_DEVICE_INFO a		
		INNER JOIN EMI_OPERATION_LOG OL ON a.DEVICE_ID = OL.DEVICE_ID
		LEFT OUTER JOIN EMI_OBJECT_MODEL OM ON OL.OBJECT_ID = OM.OBJECT_ID
		LEFT OUTER JOIN EMI_RESOURCE_MODEL RM ON OM.OBJECT_ID = RM.OBJECT_ID AND OL.RESOURCE_ID = RM.RESOURCE_ID
		LEFT OUTER JOIN EMI_METER_INFO M ON ol.target_meter = M.METER_SERIAL
		LEFT OUTER JOIN EMI_METERING_CONFIG CF ON ol.OBJECT_ID = CF.OBJECT_ID AND ol.OBJECT_INSTANCE_ID = CF.OBJECT_INSTANCE_ID AND CF.METER_TYPE = M.METER_TYPE
		WHERE 1=1
		<if test="device_id != null and device_id != ''" >
			AND OL.device_id = #{device_id} 
		</if>
		<if test="request_dt != null and request_dt != ''" >
			AND OL.request_dt = #{request_dt}
		</if>	 	
	</select>
	
	<select id="selectByTID" resultType="operationLog" parameterType="java.lang.String">	
		SELECT 
			device_id
			, request_dt
			, service_id
			, tid
			, method
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, format
			, token
			, mid
			, payload
			, target_meter
			, result
			, result_dt
			, reg_id
		 FROM EMI_OPERATION_LOG a				
		WHERE tid = #{tid} 
	</select>
	
	<select id="getExcuteRate" resultType="operationLog">	
		SELECT 
		 	ifnull(method, 'UNKNOWN') AS m_type, 
		 	SUM(case when result = 1 then 1 else 0 END) AS succ_cnt, 
		 	SUM(case when result = 0 then 1 else 0 END) AS fail_cnt, 
			SUM(case when result IS NULL then 1 else 0 END) AS wait_cnt
		FROM emi_operation_log
		WHERE request_dt BETWEEN DATE_FORMAT(now(), '%Y%m%d000000') AND DATE_FORMAT(now(), '%Y%m%d235959') 
		GROUP BY method;
	</select>
	
</mapper>