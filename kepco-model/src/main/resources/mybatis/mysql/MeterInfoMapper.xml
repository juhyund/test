<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************
* @Copyright : nuritelecom
* @ProjectName : kepco-model
* @FileName : MeterInfoMapper.xml
* @Author : kh.yoon
* @Date : 2020-02-03
************************************-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.MeterInfoDAO">

	<sql id="base_where_list">
		<where>
		<if test="meter_id != null" >     
            AND a.meter_id = #{meter_id}
        </if>
        <if test="device_id != null" >     
            AND a.device_id = #{device_id}
        </if>
        <if test="meter_type != null" >     
            AND a.meter_type = #{meter_type}
        </if>
        <if test="energy_type_code != null" >     
            AND a.energy_type_code = #{energy_type_code}
        </if>
        <if test="meter_phase != null" >     
            AND a.meter_phase = #{meter_phase}
        </if>
        <if test="model_seq != null" >     
            AND a.model_seq = #{model_seq}
        </if>
        <if test="meter_type != null" >     
            AND a.meter_type = #{meter_type}
        </if>
        <if test="meter_serial != null" >     
            AND a.meter_serial = #{meter_serial}
        </if>
        <if test="meter_type != null" >     
            AND a.meter_type = #{meter_type}
        </if>
        <if test="meter_serial != null" >     
            AND a.meter_serial = #{meter_serial}
        </if>
        <if test="device_serial != null" >     
            AND DI.device_serial = #{device_serial}
        </if>
		<if test="device_status != null" > 	
			AND DS.DEVICE_STATUS = #{device_status}
		</if>
		<if test="sdate != null and edate != null">
			AND DS.last_comm_dt between date_format(concat(#{sdate},'000000'), '%Y-%m-%d %H:%i:%s') AND date_format(concat(#{edate},'235959'), '%Y-%m-%d %H:%i:%s')
		</if>
        <if test="branch_parent_id != null" >     
            AND BR.branch_parent_id = #{branch_parent_id}
        </if>
        <if test="branch_id != null" >     
            AND DI.branch_id = #{branch_id}
        </if>
        <if test="reg_sdate != null and reg_edate != null">
			AND a.reg_dt between date_format(concat(#{reg_sdate},'000000'), '%Y-%m-%d %H:%i:%s') AND date_format(concat(#{reg_edate},'235959'), '%Y-%m-%d %H:%i:%s')
		</if>       
		<if test="searchfield != null and searchquery != null " >
			AND ${searchfield} like concat(#{searchquery},'%')
		</if>
		</where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="meterInfo">	
		SELECT COUNT(*) co
		FROM EMI_METER_INFO a		
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="meterInfo" parameterType="meterInfo">	
		SELECT 
			  meter_id
			, meter_serial
			, device_id
			, meter_type
			, energy_type_code
			, meter_phase
			, branch_id
			, model_seq
			, INET_NTOA(ip) as ip
			, port
			, prog_id
			, prog_version
			, latitude
			, longtitude
			, altitude
			, cosem_device_name
			, acon
			, rcon
			, billing_dt
			, itime
			, mtime
			, lp_period
			, pcon
			, net_metering
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, DATE_FORMAT(a.ins_dt,'${prop.dt}') AS ins_dt
			, DATE_FORMAT(a.dest_dt,'${prop.dt}') AS dest_dt
		FROM EMI_METER_INFO a	
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="selectOne" resultType="meterInfo" parameterType="meterInfo">	
		SELECT 
			 meter_id
			, meter_serial
			, device_id
			, meter_type
			, energy_type_code
			, meter_phase
			, branch_id
			, model_seq
			, INET_NTOA(ip) as ip
			, port
			, prog_id
			, prog_version
			, latitude
			, longtitude
			, altitude
			, cosem_device_name
			, acon
			, rcon
			, billing_dt
			, itime
			, mtime
			, lp_period
			, pcon
			, net_metering
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, DATE_FORMAT(a.ins_dt,'${prop.dt}') AS ins_dt
			, DATE_FORMAT(a.dest_dt,'${prop.dt}') AS dest_dt
		FROM EMI_METER_INFO a				
		WHERE meter_id = #{meter_id}
	</select>
	
	<select id="selectByMeterSerial" resultType="meterInfo" parameterType="java.lang.String">	
		SELECT 
			 meter_id
			, meter_serial
			, device_id
			, meter_type
			, energy_type_code
			, meter_phase
			, branch_id
			, model_seq
			, INET_NTOA(ip) as ip
			, port
			, prog_id
			, prog_version
			, latitude
			, longtitude
			, altitude
			, cosem_device_name
			, acon
			, rcon
			, billing_dt
			, itime
			, mtime
			, lp_period
			, pcon
			, net_metering
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, DATE_FORMAT(a.ins_dt,'${prop.dt}') AS ins_dt
			, DATE_FORMAT(a.dest_dt,'${prop.dt}') AS dest_dt
		FROM EMI_METER_INFO a				
		WHERE meter_serial = #{meter_serial}
	</select>
	
	<insert id="insert" parameterType="meterInfo">
		
		<selectKey keyProperty="meter_id" resultType="String" order="BEFORE">			
			SELECT CONCAT('MT', SUBSTR(IFNULL(SUBSTR(MAX(meter_id),3),0) + 100000001,2)) AS meter_id 
			FROM EMI_METER_INFO
		</selectKey>
		     	
		INSERT INTO EMI_METER_INFO (
			  meter_id
			, meter_serial
			, device_id
			, meter_type
			, energy_type_code
			, meter_phase
			, branch_id
			, model_seq
			, ip
			, port
			, prog_id
			, prog_version
			, latitude
			, longtitude
			, altitude
			, cosem_device_name
			, acon
			, rcon
			, billing_dt
			, itime
			, mtime
			, lp_period
			, pcon
			, net_metering
			, vendor_seq
			, reg_dt
		) VALUES (
			  #{meter_id}
			, #{meter_serial}
			, #{device_id}
			, #{meter_type}
			, #{energy_type_code}
			, #{meter_phase}
			, #{branch_id}
			, #{model_seq}
			, INET_ATON(#{ip})
			, #{port}
			, #{prog_id}
			, #{prog_version}
			, #{latitude}
			, #{longtitude}
			, #{altitude}
			, #{cosem_device_name}
			, #{acon}
			, #{rcon}
			, #{billing_dt}
			, #{itime}
			, #{mtime}
			, #{lp_period}
			, #{pcon}
			, #{net_metering}
			, #{vendor_seq}
			, now()
		)
    </insert>
    
    <update id="update" parameterType="meterInfo">
		UPDATE EMI_METER_INFO SET			 
			meter_serial = #{meter_serial}
			<if test="device_id != null" > , device_id = #{device_id} </if>
			<if test="meter_type != null" >, meter_type = #{meter_type}</if>
			<if test="energy_type_code != null" >, energy_type_code = #{energy_type_code}</if>
			<if test="meter_phase != null" >, meter_phase = #{meter_phase}</if>
			<if test="branch_id != null" >, branch_id = #{branch_id}</if>
			<if test="model_seq != null" >, model_seq = #{model_seq}</if>
			<if test="ip != null" >, ip = INET_ATON(#{ip})</if>
			<if test="port != null" >, port = #{port}</if>
			<if test="prog_id != null" >, prog_id = #{prog_id}</if>
			<if test="prog_version != null" >, prog_version = #{prog_version}</if>
			<if test="latitude != null" >, latitude = #{latitude}</if>
			<if test="longtitude != null" >, longtitude = #{longtitude}</if>
			<if test="altitude != null" >, altitude = #{altitude}</if>	
			<if test="cosem_device_name != null" >, cosem_device_name = #{cosem_device_name}</if>
			<if test="acon != null" >, acon = #{acon}</if>
			<if test="rcon != null" >, rcon = #{rcon}</if>
			<if test="billing_dt != null" >, billing_dt = #{billing_dt}</if>
			<if test="itime != null" >, itime = #{itime}</if>
			<if test="mtime != null" >, mtime = #{mtime}</if>
			<if test="lp_period != null" >, lp_period = #{lp_period}</if>
			<if test="pcon != null" >, pcon = #{pcon}</if>
			<if test="net_metering != null" >, net_metering = #{net_metering}</if>
			<if test="vendor_seq != null" >, vendor_seq = #{vendor_seq}</if>
		WHERE meter_id = #{meter_id}
	</update>
	
	<select id="getMeterList" resultType="meterInfo" parameterType="meterInfo">	
		SELECT 
			DI.device_serial
			, (SELECT branch_nm FROM emi_branch_info WHERE branch_id = br.branch_parent_id) AS parent_branch_nm
			, br.branch_nm
			, a.meter_serial
			, DI.allow_yn as allow_yn
			, DM.model_nm
			, DM.vendor_seq
			, ifnull(fnc_get_code_nm(a.meter_type),'') as meter_type
			, ifnull(fnc_get_code_nm(a.meter_phase),'') as meter_phase
			, date_format(substr(billing_dt,1,8), '%y-%m-%d') as billing_dt
			, lp_period
			, ifnull(cosem_device_name,'') as cosem_device_name 	
			, date_format(a.reg_dt, '%y-%m-%d %h:%i:%s')   as reg_dt
			, ifnull(date_format(DS.last_renw_dt, '%y-%m-%d %h:%i:%s'),'')   as last_renw_dt			
			, FNC_GET_CODE_NM(DS.device_status) as device_status
			, DATE_FORMAT(DS.last_comm_dt,'${prop.dt}') AS last_comm_dt
			, VI.vendor_nm			
		FROM EMI_METER_INFO A 
		INNER JOIN EMI_DEVICE_INFO DI ON (A.DEVICE_ID = DI.DEVICE_ID)
		LEFT OUTER JOIN EMI_DEVICE_STATUS DS ON (A.METER_ID = DS.DEVICE_ID AND DEVICE_FLAG = 'M')
		LEFT OUTER JOIN EMI_DEVICE_MODEL DM ON DI.MODEL_SEQ = DM.MODEL_SEQ
		LEFT OUTER JOIN EMI_BRANCH_INFO BR ON A.BRANCH_ID = BR.BRANCH_ID
		LEFT OUTER JOIN EMI_VENDOR_INFO VI ON DM.VENDOR_SEQ = VI.VENDOR_SEQ
		
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
		
		<include refid="query_limit" />
		
	</select>

	<select id="getMeterListCnt" resultType="int" parameterType="meterInfo">		
		SELECT 
			COUNT(*) co
		FROM EMI_METER_INFO A 
		INNER JOIN EMI_DEVICE_INFO DI ON (A.DEVICE_ID = DI.DEVICE_ID)
		LEFT OUTER JOIN EMI_DEVICE_STATUS DS ON (A.METER_ID = DS.DEVICE_ID AND DEVICE_FLAG = 'M')
		LEFT OUTER JOIN EMI_DEVICE_MODEL DM ON DI.MODEL_SEQ = DM.MODEL_SEQ
		LEFT OUTER JOIN EMI_BRANCH_INFO BR ON A.BRANCH_ID = BR.BRANCH_ID
		LEFT OUTER JOIN EMI_VENDOR_INFO VI ON DM.VENDOR_SEQ = VI.VENDOR_SEQ
		
		<include refid="base_where_list" />
		
	</select>
	
	<select id="getMeterDetailInfo" resultType="meterInfo" parameterType="meterInfo">
		SELECT 
			di.device_serial
			, br.branch_nm
			, a.meter_serial
			, a.cosem_device_name
			, a.acon
			, a.rcon
			, a.pcon
			, a.billing_dt
			, a.itime
			, a.mtime
			, a.net_metering
			, a.avg_power_period
			, di.allow_yn
			, dm.model_nm
			, dm.vendor_seq
			, ifnull(fnc_get_code_nm(a.meter_type),'') as meter_type
			, ifnull(fnc_get_code_nm(a.meter_phase),'') as meter_phase
			, ifnull(fnc_get_code_nm(di.comm_type),'') as comm_type
			, ifnull(fnc_get_code_nm(a.prog_id),'') as prog_id
			, ifnull(fnc_get_code_nm(a.prog_version),'') as prog_version
			, date_format(substr(billing_dt,1,8), '%y-%m-%d') as billing_dt
			, lp_period
			, ifnull(cosem_device_name,'') as cosem_device_name 	
			, date_format(a.reg_dt, '%y-%m-%d %h:%i:%s')   as reg_dt
			, ifnull(date_format(ds.last_renw_dt, '%y-%m-%d %h:%i:%s'),'')   as last_renw_dt			
			, ifnull(date_format(ds.last_comm_dt, '%y-%m-%d %h:%i:%s'),'')   as last_comm_dt
			, ds.device_status
			, di.comm_type
			, di.ip
			, vi.vendor_nm			
		FROM EMI_METER_INFO A 
		INNER JOIN EMI_DEVICE_INFO DI ON (A.DEVICE_ID = DI.DEVICE_ID)
		LEFT OUTER JOIN EMI_DEVICE_STATUS DS ON (A.METER_ID = DS.DEVICE_ID AND DEVICE_FLAG = 'M')
		LEFT OUTER JOIN EMI_DEVICE_MODEL DM ON DI.MODEL_SEQ = DM.MODEL_SEQ
		LEFT OUTER JOIN EMI_BRANCH_INFO BR ON A.BRANCH_ID = BR.BRANCH_ID
		LEFT OUTER JOIN EMI_VENDOR_INFO VI ON DM.VENDOR_SEQ = VI.VENDOR_SEQ
		WHERE A.METER_SERIAL = #{meter_serial}
	</select>
</mapper>
