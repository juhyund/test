<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************
* @Copyright : nuritelecom
* @ProjectName : kepco-model
* @FileName : MeterBillingMapper.xml
* @Author : kh.yoon
* @Date : 2020-02-03
************************************-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.MeterDataDAO">

	<sql id="base_where_list">
		<where>
        <if test="sdate != null and edate != null and sdate != '' and edate != '' " >     
            AND a.read_dt between #{sdate} AND #{edate}
        </if>
        <if test="meter_type != null and meter_type != ''" >     
            AND  mi.meter_type = #{meter_type}
        </if>
        <if test="device_serial != null and device_serial != ''" >     
            AND device_serial = #{device_serial}
        </if>
        <if test="read_dt != null and read_dt != ''" >
            AND a.read_dt = #{read_dt}
        </if>
        <if test="meter_serial != null and meter_serial != ''" >     
            AND mi.meter_serial = #{meter_serial}
        </if>
        <if test="branch_id != null and branch_id != ''" >     
            AND b.branch_id = #{branch_id}
        </if>
		<if test="searchfield != null and searchquery != null " >
			AND ${searchfield} like concat(#{searchquery},'%')
		</if>
		</where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="meterData">	
		SELECT COUNT(*) co
		FROM EMI_METER_Data a	
		INNER JOIN EMI_METER_INFO mi ON (a.METER_ID = mi.METER_ID)
		INNER JOIN EMI_DEVICE_INFO di ON (mi.DEVICE_ID = di.DEVICE_ID)
		INNER JOIN EMI_OBIS_CODE c ON (mi.meter_type = c.meter_type AND a.obis_code = c.obis_code)
		LEFT OUTER JOIN emi_branch_info b ON (b.branch_id = mi.branch_id)
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="meterData" parameterType="meterData">	
		SELECT 
			a.meter_id
			, meter_serial
			, b.branch_nm
			, (SELECT branch_nm FROM emi_branch_info WHERE branch_id = b.branch_parent_id) AS parent_branch_nm
			, meter_serial
			, IFNULL(fnc_get_code_nm(mi.meter_type),'') AS meter_type
			, c.descr AS obis_code_descr
			, device_serial
			, DATE_FORMAT(CONCAT(a.read_dt),'${prop.dt}') AS read_dt
			, a.read_dt AS read_dt_int
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, DATE_FORMAT(CONCAT(a.itime),'${prop.dt}') AS itime
			, DATE_FORMAT(CONCAT(a.mtime),'${prop.dt}') AS mtime
			, a.obis_code
			, c.kepco_obis
		FROM EMI_METER_Data a	
		INNER JOIN EMI_METER_INFO mi ON (a.METER_ID = mi.METER_ID)
		INNER JOIN EMI_DEVICE_INFO di ON (mi.DEVICE_ID = di.DEVICE_ID)
		INNER JOIN EMI_OBIS_CODE c ON (mi.meter_type = c.meter_type AND a.obis_code = c.obis_code and a.class_id = c.class_id and a.attribute_no = c.attribute_no)
		LEFT OUTER JOIN emi_branch_info b ON (b.branch_id = mi.branch_id)
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="selectDetail" resultType="meterData" parameterType="meterData">	
		SELECT 
			a. meter_id
			, meter_serial
			, b.branch_nm
			, (SELECT branch_nm FROM emi_branch_info WHERE branch_id = b.branch_parent_id) AS parent_branch_nm
			, meter_serial
			, IFNULL(fnc_get_code_nm(mi.meter_type),'') AS meter_type
			, c.descr AS obis_code_descr
			, device_serial
			, DATE_FORMAT(CONCAT(a.read_dt,'00'),'${prop.dt}') AS read_dt
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, DATE_FORMAT(CONCAT(a.itime,'00'),'${prop.dt}') AS itime
			, DATE_FORMAT(CONCAT(a.mtime,'00'),'${prop.dt}') AS mtime
			, payload
			, DATE_FORMAT(ds.last_comm_dt,'${prop.dt}') AS last_comm_dt
			, c.kepco_obis
		FROM EMI_METER_Data a	
		INNER JOIN EMI_METER_INFO mi ON (a.METER_ID = mi.METER_ID)
		INNER JOIN EMI_DEVICE_INFO di ON (mi.DEVICE_ID = di.DEVICE_ID)
		INNER JOIN EMI_OBIS_CODE c ON (mi.meter_type = c.meter_type AND a.obis_code = c.obis_code and a.class_id = c.class_id and a.attribute_no = c.attribute_no)
		LEFT JOIN EMI_DEVICE_STATUS AS ds ON (mi.device_id = ds.device_id)
		LEFT OUTER JOIN emi_branch_info b ON (b.branch_id = mi.branch_id)
		WHERE a.meter_id = #{meter_id}   
			AND a.read_dt = #{read_dt}
			AND a.obis_code = #{obis_code}		
	</select>
	
	<select id="selectOne" resultType="meterData" parameterType="meterData">	
	
	</select>
	
	<insert id="insert" parameterType="meterData">
		INSERT INTO EMI_METER_DATA (
			METER_ID
			, READ_DT
			, OBIS_CODE
			, CLASS_ID
			, ATTRIBUTE_NO
			, MTIME
			, ITIME
			, PAYLOAD
			, REG_DT
		) VALUES (
			#{meter_id}
			, #{read_dt}
			, #{obis_code}
			, #{class_id}
			, #{attribute_no}
			, #{mtime}
			, #{itime}
			, #{payload}
			, now()
		)
    </insert>
    
    
    <insert id="insertAll" parameterType="meterData">     	
    </insert>
    
</mapper>