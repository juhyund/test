<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************
* @Copyright : nuritelecom
* @ProjectName : kepco-model
* @FileName : DeviceResourceMapper.xml
* @Author : kh.yoon
* @Date : 2020-02-03
************************************-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	
<mapper namespace="com.nuri.kepco.model.dao.DeviceResourceDAO">

	<sql id="base_where_list">
		<where>
		<if test="device_id != null" >     
            AND a.device_id = #{device_id}
        </if>
        <if test="resource_path != null" >     
            AND a.resource_path = #{resource_path}
        </if>
        <if test="object_id != null" >     
            AND a.object_id = #{object_id}
        </if>
        <if test="object_instance_id != null" >     
            AND a.object_instance_id = #{object_instance_id}
        </if>
        <if test="resource_id != null" >     
            AND a.resource_id = #{resource_id}
        </if>
        <if test="resource_instance_id != null" >     
            AND a.resource_instance_id = #{resource_instance_id}
        </if>
		<if test="searchfield != null and searchquery != null " >
			AND ${searchfield} like concat(#{searchquery},'%')
		</if>
		</where>
	</sql>
	
	<sql id="order_by_list">	
		<foreach collection="orderByList" item="orderby" open="order by" index="index" separator=",">
            ${orderby.sort} ${orderby.dir}            
        </foreach>
	</sql>
	
	<sql id="query_limit">	
		<if test="limit > 0 " >
			LIMIT #{start}, #{limit}
		</if>
	</sql>
	
	<select id="selectCount" resultType="java.lang.Integer" parameterType="deviceResource">	
		SELECT COUNT(*) co
		FROM EMI_DEVICE_RESOURCE a		
		<include refid="base_where_list" /> 
	</select>

	<select id="selectList" resultType="deviceResource" parameterType="deviceResource">	
		SELECT 
			device_id
			, resource_path
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, resource_val
			, reg_id
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, update_id
			, DATE_FORMAT(a.update_dt,'${prop.dt}') AS update_dt
		FROM EMI_DEVICE_RESOURCE a	
			
		<include refid="base_where_list" />
		
		<include refid="order_by_list" />	
			
		<include refid="query_limit" />
		
	</select>
	
	<select id="selectOne" resultType="deviceResource" parameterType="deviceResource">	
		SELECT 
			device_id
			, resource_path
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, resource_val
			, reg_id
			, DATE_FORMAT(a.reg_dt,'${prop.dt}') AS reg_dt
			, update_id
			, DATE_FORMAT(a.update_dt,'${prop.dt}') AS update_dt
		FROM EMI_DEVICE_RESOURCE a				
		WHERE device_id = #{device_id} AND resource_seq = #{resource_seq}
	</select>
	
	<insert id="insert" parameterType="deviceResource">     	
		INSERT INTO EMI_DEVICE_RESOURCE (
			device_id
			, resource_path
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, resource_val
			, reg_id
			, reg_dt
			, update_id
			, update_dt
		) VALUES (
			#{device_id}
			, #{resource_path}
			, #{object_id}
			, #{object_instance_id}
			, #{resource_id}
			, #{resource_instance_id}
			, #{resource_val}
			, #{reg_id}
			, now()
			, #{update_id}
			, now()
		)
    </insert>
    
    <insert id="insertAll" parameterType="java.util.List">     	
		INSERT INTO EMI_DEVICE_RESOURCE (
			device_id
			, resource_path
			, object_id
			, object_instance_id
			, resource_id
			, resource_instance_id
			, resource_val
			, reg_id
			, reg_dt
			, update_id
			, update_dt
		) 
		VALUES 
		<foreach collection="list" item="list" index="index" open="(" separator="),("  close=")">
			#{list.device_id}
			, #{list.resource_path}
			, #{list.object_id}
			, #{list.object_instance_id}
			, #{list.resource_id}
			, #{list.resource_instance_id}
			, #{list.resource_val}
			, #{list.reg_id}			
			, now()
			, #{list.update_id}
			, now()
		</foreach>		
		ON DUPLICATE KEY UPDATE resource_val=VALUES(resource_val),update_dt=now();
    </insert>
    
    <delete id="delete" parameterType="deviceResource">
		DELETE FROM 
			EMI_DEVICE_RESOURCE 
		WHERE device_id = #{device_id} and resource_path = #{resource_path}
	</delete>
    
    <update id="update" parameterType="deviceResource">
		UPDATE EMI_DEVICE_RESOURCE SET			
			object_id = #{object_id}
			, object_instance_id = #{object_instance_id}
			, resource_id = #{resource_id}
			, resource_instance_id = #{resource_instance_id}
			, resource_val = #{resource_val}			
			, update_id = #{update_id}
			, update_dt = now()
		WHERE device_id = #{device_id} and resource_path = #{resource_path}
	</update>
	
	<select id="getObjectModelList" resultType="deviceResource" parameterType="deviceResource">  
        SELECT 
        	c.device_id
        	, a.object_nm
        	, a.object_id
        	, c.object_instance_id
        	, a.instances
        	, b.descr
        FROM 
        EMI_OBJECT_MODEL a 
        LEFT OUTER JOIN EMI_RESOURCE_MODEL b ON a.object_id = b.object_id
        LEFT OUTER JOIN EMI_DEVICE_RESOURCE c ON a.object_id = c.object_id AND b.resource_id = c.resource_id
        
        <where>
		<if test="device_id != null" >     
            AND c.device_id = #{device_id}
        </if>
        <if test="searchfield != null and searchquery != null " >
			AND a.${searchfield} like concat(#{searchquery},'%')
		</if>
        <if test="instances != -1" >
			AND a.instances = #{instances}
		</if>
		</where>
        GROUP BY c.device_id, c.object_id
    </select>
    <select id="getResourceModelList" resultType="deviceResource" parameterType="deviceResource">  
		SELECT 
        	c.device_id
        	, a.object_id
        	, a.object_nm
        	, c.object_instance_id
        	, b.resource_id
        	, b.resource_nm
        	, c.resource_instance_id
        	, b.operation
        	, b.instances
        	, b.mandatory
        	, c.resource_val
        	, b.unit
        FROM EMI_OBJECT_MODEL a 
        LEFT OUTER JOIN EMI_RESOURCE_MODEL b ON ( a.object_id = b.object_id )
		 LEFT OUTER JOIN EMI_DEVICE_RESOURCE c ON ( b.object_id = c.object_id AND b.resource_id = c.resource_id AND  c.device_id = #{device_id})
        <where> 
        <if test="object_id != null and searchfield == null">     
			AND a.object_id = #{object_id}
        </if>
        </where>
    </select>
    
    
    <select id="getMeterResourceList" resultType="deviceResource" parameterType="deviceResource">
	  	SELECT
			A.OBJECT_ID
			, A.OBJECT_INSTANCE_ID
			, A.OBJECT_NM
			, A.RESOURCE_ID
			, A.RESOURCE_NM
			, A.OPERATION
			, A.INSTANCES
			, A.MANDATORY
			, A.DATA_TYPE
			, A.RANGE
			, A.UNIT	
			, GROUP_CONCAT(RESOURCE_INSTANCE_ID) AS RESOURCE_INSTANCE_ID
			, GROUP_CONCAT(RESOURCE_VAL) AS RESOURCE_VAL
		FROM (
			SELECT 
				A.OBJECT_ID
				, ${object_instance_id} AS OBJECT_INSTANCE_ID 
				, A.OBJECT_NM
				, B.RESOURCE_ID
				, B.RESOURCE_NM		
				, B.OPERATION
				, B.INSTANCES
				, B.MANDATORY
				, B.DATA_TYPE
				, B.RANGE
				, B.UNIT
				, D.RESOURCE_INSTANCE_ID
				, D.RESOURCE_VAL
			FROM EMI_OBJECT_MODEL A 
			INNER JOIN EMI_RESOURCE_MODEL B ON (A.OBJECT_ID = B.OBJECT_ID)
			LEFT OUTER JOIN (
				SELECT 
					D.* 
			   FROM EMI_DEVICE_RESOURCE D
				WHERE D.DEVICE_ID = #{device_id}
				  AND D.OBJECT_ID = #{object_id}
				  AND D.OBJECT_INSTANCE_ID = #{object_instance_id}
			) D ON (A.OBJECT_ID = D.OBJECT_ID AND B.RESOURCE_ID = D.RESOURCE_ID) 
			WHERE A.OBJECT_ID = #{object_id}
			  AND B.OPERATION = 'RW'
		) A 
		GROUP BY A.OBJECT_ID, A.OBJECT_INSTANCE_ID, A.RESOURCE_ID	
    </select>

</mapper>
